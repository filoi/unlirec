{"version":3,"sources":["D2App/components/LinkButton/LinkButton.module.css","D2App/pages/JobList/JobList.module.css","D2App/components/FormErrorBox/FormErrorBox.module.css","D2App/components/FormFields/DataIntegrityChecksField.module.css","D2App/components/FormFields/ParameterFields.module.css","D2App/components/FormFields/AggregatedDataExchangeField.module.css","D2App/components/Forms/JobAddForm.module.css","D2App/components/Forms/JobEditForm.module.css","D2App/components/JobDetails/JobDetails.module.css","D2App/pages/JobEdit/JobEdit.module.css","D2App/pages/JobView/JobView.module.css","D2App/pages/JobAdd/JobAdd.module.css","D2App/components/AuthWall/AuthWall.module.css","D2App/components/PageWrapper/PageWrapper.module.css","D2App/components/Store/StoreContext.js","D2App/components/Store/Store.js","D2App/components/Store/hooks.js","D2App/services/server-translations/analyticsTableTypes.js","D2App/services/server-translations/jobTypesMap.js","D2App/services/server-translations/jobStatusMap.js","D2App/components/Switches/ToggleJobSwitch.js","D2App/services/history/history.js","D2App/services/history/index.js","D2App/components/JobTable/EditJobAction.js","D2App/components/JobTable/ViewJobAction.js","D2App/components/Modal/CronPresetModal.js","D2App/components/Modal/DeleteJobModal.js","D2App/components/Modal/DiscardFormModal.js","D2App/components/Modal/RunJobModal.js","D2App/components/JobTable/RunJobAction.js","D2App/components/JobTable/DeleteJobAction.js","D2App/components/JobTable/Actions.js","D2App/components/JobTable/Status.js","D2App/components/JobTable/NextRun.js","D2App/services/validators/validate-cron.js","D2App/services/validators/required-cron.js","D2App/services/translate-cron/translate-cron.js","D2App/services/translate-cron/index.js","D2App/components/JobTable/Schedule.js","D2App/components/JobTable/JobTableRow.js","D2App/components/JobTable/JobTable.js","D2App/components/LinkButton/LinkButton.js","D2App/pages/JobList/JobList.js","D2App/pages/JobList/JobListContainer.js","D2App/components/Buttons/CronPresetButton.js","D2App/components/Buttons/DeleteJobButton.js","D2App/components/Buttons/DiscardFormButton.js","D2App/services/format-error/format-error.js","D2App/services/format-error/index.js","D2App/hooks/jobs/use-submit-job.js","D2App/hooks/jobs/use-update-job.js","D2App/components/FormErrorBox/FormErrorBox.js","D2App/components/FormFields/JobNameField.js","D2App/components/FormFields/JobTypeField.js","D2App/components/FormFields/formatters.js","D2App/components/FormFields/SkipTableTypesField.js","D2App/components/FormFields/LabeledOptionsField.js","D2App/services/server-translations/dataIntegrityChecks.js","D2App/components/FormFields/DataIntegrityChecksField.js","D2App/components/FormFields/DataIntegrityReportTypeField.js","D2App/components/FormFields/AggregatedDataExchangeField.js","D2App/components/FormFields/ParameterFields.js","D2App/components/FormFields/CronField.js","D2App/components/FormFields/DelayField.js","D2App/components/FormFields/ScheduleField.js","D2App/components/FormFields/index.js","D2App/components/Forms/JobAddForm.js","D2App/components/Forms/JobAddFormContainer.js","D2App/components/Forms/JobEditForm.js","D2App/components/Forms/JobEditFormContainer.js","D2App/components/JobDetails/JobDetails.js","D2App/pages/JobEdit/JobEdit.js","D2App/pages/JobEdit/JobEditContainer.js","D2App/pages/JobView/JobView.js","D2App/pages/JobAdd/JobAdd.js","D2App/pages/JobAdd/JobAddContainer.js","D2App/components/Routes/Routes.js","D2App/components/AuthWall/AuthWall.js","D2App/components/AuthWall/selectors.js","D2App/components/PageWrapper/PageWrapper.js","D2App/locales/index.js","D2App/components/App/App.js"],"names":["module","exports","StoreContext","createContext","jobs","jobTypes","parameterOptions","refetchJobs","Error","jobsQuery","resource","params","fields","paging","jobTypesQuery","optionsQuery","skipTableTypes","validationRuleGroups","pushAnalysis","predictors","predictorGroups","dataIntegrityChecks","node","PropTypes","Store","children","jobFilterState","useState","showSystemJobsState","jobsFetch","useDataQuery","jobTypesFetch","optionsFetch","loading","React","createElement","Layer","CenteredContent","CircularLoader","error","jobConfigurations","data","Provider","value","refetch","jobFilter","showSystemJobs","useAllJobs","useContext","useAllParameterOptions","useAllJobTypes","useRefetchJobs","useJobFilter","useShowSystemJobs","useJobListJobs","filter","job","displayName","toLowerCase","includes","configurable","useJob","id","find","useJobType","jobType","useJobTypeParameters","selectedJobType","jobParameters","useParameterOptions","parameter","analyticsTableTypes","DATA_VALUE","i18n","t","COMPLETENESS","COMPLETENESS_TARGET","ORG_UNIT_TARGET","EVENT","ENROLLMENT","VALIDATION_RESULT","jobTypesMap","ANALYTICS_TABLE","CONTINUOUS_ANALYTICS_TABLE","CREDENTIALS_EXPIRY_ALERT","DATA_INTEGRITY","DATA_SET_NOTIFICATION","DATA_STATISTICS","DATA_SYNC","EVENT_PROGRAMS_DATA_SYNC","FILE_RESOURCE_CLEANUP","META_DATA_SYNC","MONITORING","PREDICTOR","PROGRAM_NOTIFICATIONS","PUSH_ANALYSIS","REMOVE_EXPIRED_RESERVED_VALUES","RESOURCE_TABLE","SEND_SCHEDULED_MESSAGE","TRACKER_PROGRAMS_DATA_SYNC","VALIDATION_RESULTS_NOTIFICATION","DISABLE_INACTIVE_USERS","AGGREGATE_DATA_EXCHANGE","jobStatusMap","COMPLETED","DISABLED","DONE","FAILED","NOT_STARTED","RUNNING","SCHEDULED","STOPPED","mutation","type","partial","enabled","bool","string","ToggleJobSwitch","checked","disabled","toggleJob","useDataMutation","hooks","Switch","name","onChange","then","ariaLabel","history","createHashHistory","EditJobAction","MenuItem","dense","onClick","push","label","ViewJobAction","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","cronPresets","func","CronPresetModal","setCron","hideModal","currentPreset","setCurrentPreset","Modal","open","small","onClose","ModalTitle","ModalContent","map","preset","Radio","ModalActions","ButtonStrip","end","Button","secondary","primary","DeleteJobModal","onSuccess","deleteJob","destructive","DiscardFormModal","RunJobModal","runJob","onComplete","NoticeBox","title","message","RunJobAction","showModal","setShowModal","Fragment","DeleteJobAction","Actions","DropdownButton","component","FlyoutMenu","defaultProps","Status","status","Tag","neutral","negative","positive","NextRun","nextExecutionTime","now","moment","Date","nextRun","utc","isSameOrBefore","to","propTypes","isRequired","WEEKDAYS","MONTHS","isValidNumber","number","x","y","isWildcard","field","isUndefined","isValidWithinRange","range","boundaries","split","isValidNumberRange","fraction","components","isValidFraction","isValidMonthField","months","firstMonth","secondMonth","m","indexOf","undefined","isAlphabeticMonth","isValidWeekdayField","weekdays","firstDay","secondDay","c","isAlphabeticWeekday","validateCron","exp","trim","isValidFields","isValidMinuteField","isValidHourField","isValidDayField","requiredCron","translateCron","cron","locale","language","cronstrue","toString","Schedule","cronExpression","schedulingType","delay","shape","JobTableRow","jobStatus","TableRow","TableCell","role","object","arrayOf","JobTable","Table","TableHead","TableRowHead","TableCellHead","TableBody","LinkButton","className","rest","Link","cx","styles","linkButton","JobList","setShowSystemJobs","setJobFilter","header","headerTitle","href","headerLink","rel","headerLinkIcon","IconInfo16","Card","controlContainer","InputField","dataTest","controlRight","Checkbox","JobListContainer","CronPresetButton","DeleteJobButton","DiscardFormButton","shouldConfirm","FORM_ERROR","FinalForm","formatError","details","response","validationErrors","genericErrors","errorReports","forEach","report","errorProperty","useSubmitJob","engine","useDataEngine","mutate","variables","catch","useUpdateJob","array","FormErrorBox","submitError","list","Field","ReactFinalForm","VALIDATOR","composeValidators","hasValue","JobNameField","InputFieldFF","validate","required","FIELD_NAME","JobTypeField","options","sort","job1","job2","localeCompare","SingleSelectFieldFF","formatToString","SkipTableTypesField","parameterName","MultiSelectField","helpText","translatedOptions","option","MultiSelectFieldFF","LabeledOptionsField","labeledOptions","dataIntegrityChecksMap","program_indicators_with_invalid_expressions","data_elements_without_groups","indicators_with_invalid_numerator","program_rule_actions_without_notification","categories_one_default_category_combo","data_elements_without_data_sets","category_combos_being_invalid","indicators_with_identical_formulas","indicators_without_groups","data_elements_in_data_set_not_in_form","program_rules_without_priority","validation_rules_without_groups","program_indicators_with_invalid_filters","categories_no_options","program_rules_without_condition","program_rule_actions_without_stage","categories_one_default_category","categories_unique_category_combo","org_units_with_cyclic_references","program_rule_variables_without_data_element","validation_rules_with_invalid_right_side_expression","data_sets_not_assigned_to_org_units","data_elements_violating_exclusive_group_sets","org_unit_groups_without_group_sets","program_rule_variables_without_attribute","org_units_violating_exclusive_group_sets","program_rule_actions_without_data_object","categories_one_default_category_option","categories_one_default_category_option_combo","org_units_without_groups","program_indicators_without_expression","indicators_violating_exclusive_group_sets","periods_duplicates","data_elements_assigned_to_data_sets_with_different_period_types","program_rules_without_action","org_units_being_orphaned","validation_rules_with_invalid_left_side_expression","indicators_with_invalid_denominator","program_rule_actions_without_section","severityMap","WARNING","SEVERE","reportTypeMap","REPORT","SUMMARY","DETAILS","snakeCaseToHumanReadable","first","toUpperCase","concat","slice","join","getCheckName","getReportTypeLabel","useField","LabelComponent","severity","highlighted","transferOption","optionName","optionSeverity","renderOption","TransferOption","ChecksTransfer","input","meta","hidden","handleChange","useCallback","selected","isErr","touched","invalid","Transfer","maxSelections","Infinity","enableOrderChange","filterable","height","selectedEmptyComponent","SelectedEmptyComponent","transfer","Help","DataIntegrityChecksField","runSelected","setRunSelected","a","b","toggle","runSelectedChecked","FieldGroup","DataIntegrityReportTypeField","constants","initialValue","query","dataExchangeIds","AggregatedDataExchangeField","_data$dataExchangeIds","_data$dataExchangeIds2","_meta$error","beforeSubmit","_error$details","_error$details2","aggregateDataExchanges","exchangeIds","validationText","JOB_TYPES","ParameterFields","parameters","parameterComponents","fieldName","klass","parameterProps","parameterComponent","CustomParameterComponent","getCustomComponent","Box","marginTop","SwitchFieldFF","format","useFormState","useForm","CronField","form","values","subscription","change","integer","createNumberRange","DelayField","lowerbound","upperbound","ScheduleField","fieldNames","JOB_TYPE","JobAddForm","handleSubmit","pristine","submitting","hasSubmitErrors","setIsPristine","subscribe","useEffect","Spinner","onSubmit","maxWidth","formButtonContainer","icon","saveButton","Form","JobAddFormContainer","submitJob","destroyOnUnregister","JobEditForm","deleteButton","initialFields","JobEditFormContainer","useParams","updateJob","initialValues","reduce","filtered","JobDetails","created","lastExecutedStatus","lastExecuted","createdFromNow","from","translatedStatus","lastRunFromNow","wrapper","nsSeparator","JobEdit","isPristine","pageHeader","pageHeaderButton","pageHeaderTitle","card","cardHeader","cardHeaderTitle","cardHeaderLink","cardHeaderInfo","jobDetails","JobEditContainer","JobView","SingleSelectField","SingleSelectOption","JobAdd","JobAddContainer","Routes","Router","Route","exact","path","me","AuthWall","authorities","getAuthorized","noticeBoxWrapper","PageWrapper","namespace","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","App","CssVariables","spacers","colors","theme"],"mappings":"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","file":"static/js/app.2b17c7cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"LinkButton_linkButton__3VZ1s\",\"small\":\"LinkButton_small__v52sS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"JobList_header__23tFt\",\"headerTitle\":\"JobList_headerTitle__21D__\",\"headerLink\":\"JobList_headerLink__2zepi\",\"headerLinkIcon\":\"JobList_headerLinkIcon__XdfBB\",\"controlContainer\":\"JobList_controlContainer__3Yzj_\",\"controlRight\":\"JobList_controlRight__38lfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormErrorBox_list__3BejY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer\":\"DataIntegrityChecksField_transfer__3iNhL\",\"transferOption\":\"DataIntegrityChecksField_transferOption__196nJ\",\"optionName\":\"DataIntegrityChecksField_optionName__1FPq_\",\"optionSeverity\":\"DataIntegrityChecksField_optionSeverity__1ko-k\",\"highlighted\":\"DataIntegrityChecksField_highlighted__o3WxL\",\"selectedEmptyComponent\":\"DataIntegrityChecksField_selectedEmptyComponent__1nkdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"ParameterFields_headerTitle__IBF76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AggregatedDataExchangeField_field__3fdB6\",\"selectedEmptyComponent\":\"AggregatedDataExchangeField_selectedEmptyComponent__21mzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobAddForm_formButtonContainer__1MLSp\",\"saveButton\":\"JobAddForm_saveButton__RfxZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobEditForm_formButtonContainer__2b6Fi\",\"deleteButton\":\"JobEditForm_deleteButton__VQxBE\",\"saveButton\":\"JobEditForm_saveButton__278Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JobDetails_wrapper__1-YkO\",\"title\":\"JobDetails_title__1Cht7\",\"details\":\"JobDetails_details__2HITJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobEdit_pageHeader__3Fywp\",\"pageHeaderButton\":\"JobEdit_pageHeaderButton__29yjJ\",\"pageHeaderTitle\":\"JobEdit_pageHeaderTitle__jZrIG\",\"card\":\"JobEdit_card__2QqEg\",\"cardHeader\":\"JobEdit_cardHeader__Mv_cj\",\"cardHeaderTitle\":\"JobEdit_cardHeaderTitle__29Y64\",\"cardHeaderInfo\":\"JobEdit_cardHeaderInfo__3VWZt\",\"cardHeaderLink\":\"JobEdit_cardHeaderLink__2frj7\",\"jobDetails\":\"JobEdit_jobDetails__194v-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobView_pageHeader__3d3IR\",\"pageHeaderButton\":\"JobView_pageHeaderButton__2VF9Z\",\"pageHeaderTitle\":\"JobView_pageHeaderTitle__3wHyg\",\"card\":\"JobView_card__3LlD0\",\"cardHeader\":\"JobView_cardHeader__3v0pX\",\"cardHeaderTitle\":\"JobView_cardHeaderTitle__tPEnV\",\"cardHeaderInfo\":\"JobView_cardHeaderInfo__j1GsD\",\"cardHeaderLink\":\"JobView_cardHeaderLink__86M36\",\"jobDetails\":\"JobView_jobDetails__3cu4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobAdd_pageHeader__2NZzc\",\"pageHeaderButton\":\"JobAdd_pageHeaderButton__Xg_R9\",\"pageHeaderTitle\":\"JobAdd_pageHeaderTitle__1RMl0\",\"card\":\"JobAdd_card__1HH6H\",\"cardHeader\":\"JobAdd_cardHeader__1D3sS\",\"cardHeaderTitle\":\"JobAdd_cardHeaderTitle__2TG9a\",\"cardHeaderInfo\":\"JobAdd_cardHeaderInfo__vq_Y1\",\"cardHeaderLink\":\"JobAdd_cardHeaderLink__2CzPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBoxWrapper\":\"AuthWall_noticeBoxWrapper__1ums5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageWrapper_wrapper__t-CJy\"};","import { createContext } from 'react';\nconst StoreContext = /*#__PURE__*/createContext({\n  jobs: {},\n  jobTypes: {},\n  parameterOptions: {},\n  refetchJobs: () => {\n    throw new Error('Store context needs a valid provider');\n  }\n});\nexport default StoreContext;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent } from '@dhis2/ui';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport StoreContext from './StoreContext';\nconst jobsQuery = {\n  jobs: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst jobTypesQuery = {\n  jobTypes: {\n    resource: 'jobConfigurations/jobTypes',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst optionsQuery = {\n  // Used by the ANALYTICS_TABLE and CONTINUOUS_ANALYTICS_TABLE job types\n  skipTableTypes: {\n    resource: 'analytics/tableTypes'\n  },\n  // Used by the MONITORING job type\n  validationRuleGroups: {\n    resource: 'validationRuleGroups',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PUSH_ANALYSIS job type\n  pushAnalysis: {\n    resource: 'pushAnalysis',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PREDICTOR job type\n  predictors: {\n    resource: 'predictors',\n    params: {\n      paging: false\n    }\n  },\n  predictorGroups: {\n    resource: 'predictorGroups',\n    params: {\n      paging: false\n    }\n  },\n  dataIntegrityChecks: {\n    resource: 'dataIntegrity'\n  }\n};\n\nconst Store = ({\n  children\n}) => {\n  // State that should persist after a refetch\n  const jobFilterState = useState('');\n  const showSystemJobsState = useState(false);\n  const jobsFetch = useDataQuery(jobsQuery);\n  const jobTypesFetch = useDataQuery(jobTypesQuery);\n  const optionsFetch = useDataQuery(optionsQuery);\n  const loading = jobsFetch.loading || jobTypesFetch.loading || optionsFetch.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = jobsFetch.error || jobTypesFetch.error || optionsFetch.error;\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * have any data, so throw the error.\n     */\n    throw error;\n  }\n\n  const {\n    jobConfigurations: jobs\n  } = jobsFetch.data.jobs;\n  const {\n    jobTypes\n  } = jobTypesFetch.data.jobTypes;\n  const {\n    skipTableTypes,\n    validationRuleGroups: {\n      validationRuleGroups\n    },\n    pushAnalysis: {\n      pushAnalysis\n    },\n    predictors: {\n      predictors\n    },\n    predictorGroups: {\n      predictorGroups\n    },\n    dataIntegrityChecks\n  } = optionsFetch.data;\n  const parameterOptions = {\n    skipTableTypes,\n    validationRuleGroups,\n    pushAnalysis,\n    predictors,\n    predictorGroups,\n    dataIntegrityChecks\n  };\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      jobs,\n      jobTypes,\n      parameterOptions,\n      refetchJobs: jobsFetch.refetch,\n      jobFilter: jobFilterState,\n      showSystemJobs: showSystemJobsState\n    }\n  }, children);\n};\n\nconst {\n  node\n} = PropTypes;\nStore.propTypes = {\n  children: node.isRequired\n};\nexport default Store;","import { useContext } from 'react';\nimport StoreContext from './StoreContext';\nexport const useAllJobs = () => {\n  const store = useContext(StoreContext);\n  return store.jobs;\n};\nexport const useAllParameterOptions = () => {\n  const store = useContext(StoreContext);\n  return store.parameterOptions;\n};\nexport const useAllJobTypes = () => {\n  const store = useContext(StoreContext);\n  return store.jobTypes;\n};\nexport const useRefetchJobs = () => {\n  const store = useContext(StoreContext);\n  return store.refetchJobs;\n};\n/**\n * The state for the job filter and showing system\n * jobs is used in the job list, but kept in the\n * store since it has to persist after a refetch.\n */\n\nexport const useJobFilter = () => {\n  const store = useContext(StoreContext);\n  return store.jobFilter;\n};\nexport const useShowSystemJobs = () => {\n  const store = useContext(StoreContext);\n  return store.showSystemJobs;\n};\n/**\n * This hook returns the list of jobs that's shown in the\n * job list route. The list is filtered by the job filter\n * string and the show system jobs toggle from the store\n * state.\n */\n\nexport const useJobListJobs = () => {\n  const [jobFilter] = useJobFilter();\n  const [showSystemJobs] = useShowSystemJobs();\n  const jobs = useAllJobs(); // Filter jobs by the current jobFilter\n\n  const applyJobFilter = job => job.displayName.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  return jobs.filter(applyJobFilter).filter(applyShowSystemJobs);\n}; // Finds a job by id\n\nexport const useJob = id => {\n  const jobs = useAllJobs();\n  return jobs.find(job => job.id === id);\n}; // Finds a jobType by the jobType string\n\nexport const useJobType = jobType => {\n  const jobTypes = useAllJobTypes();\n  return jobTypes.find(job => job.jobType === jobType);\n}; // Returns an array with all parameters for a certain jobType\n\nexport const useJobTypeParameters = jobType => {\n  const selectedJobType = useJobType(jobType);\n  const hasParameters = ('jobParameters' in selectedJobType);\n\n  if (!hasParameters) {\n    return [];\n  }\n\n  return selectedJobType.jobParameters;\n}; // Returns the parameter options for a given parameter\n\nexport const useParameterOptions = parameter => {\n  const parameterOptions = useAllParameterOptions();\n  return parameterOptions[parameter];\n};","import i18n from '@dhis2/d2-i18n';\nconst analyticsTableTypes = {\n  DATA_VALUE: i18n.t('Data value'),\n  COMPLETENESS: i18n.t('Completeness'),\n  COMPLETENESS_TARGET: i18n.t('Completeness target'),\n  ORG_UNIT_TARGET: i18n.t('Org unit target'),\n  EVENT: i18n.t('Event'),\n  ENROLLMENT: i18n.t('Enrollment'),\n  VALIDATION_RESULT: i18n.t('Validation result')\n};\nexport default analyticsTableTypes;","import i18n from '@dhis2/d2-i18n';\nconst jobTypesMap = {\n  ANALYTICS_TABLE: i18n.t('Analytics table'),\n  CONTINUOUS_ANALYTICS_TABLE: i18n.t('Continuous analytics table'),\n  CREDENTIALS_EXPIRY_ALERT: i18n.t('Credentials expiry alert'),\n  DATA_INTEGRITY: i18n.t('Data integrity'),\n  DATA_SET_NOTIFICATION: i18n.t('Dataset notification'),\n  DATA_STATISTICS: i18n.t('Data statistics'),\n  DATA_SYNC: i18n.t('Data synchronization'),\n  EVENT_PROGRAMS_DATA_SYNC: i18n.t('Event programs data sync'),\n  FILE_RESOURCE_CLEANUP: i18n.t('File resource clean up'),\n  META_DATA_SYNC: i18n.t('Metadata synchronization'),\n  MONITORING: i18n.t('Monitoring'),\n  PREDICTOR: i18n.t('Predictor'),\n  PROGRAM_NOTIFICATIONS: i18n.t('Program notifications'),\n  PUSH_ANALYSIS: i18n.t('Push analysis'),\n  REMOVE_EXPIRED_RESERVED_VALUES: i18n.t('Remove expired reserved values'),\n  RESOURCE_TABLE: i18n.t('Resource table'),\n  SEND_SCHEDULED_MESSAGE: i18n.t('Send scheduled message'),\n  TRACKER_PROGRAMS_DATA_SYNC: i18n.t('Tracker programs data sync'),\n  VALIDATION_RESULTS_NOTIFICATION: i18n.t('Validation results notification'),\n  DISABLE_INACTIVE_USERS: i18n.t('Disable inactive users'),\n  AGGREGATE_DATA_EXCHANGE: i18n.t('Exchange aggregate data')\n};\nexport default jobTypesMap;","import i18n from '@dhis2/d2-i18n';\nconst jobStatusMap = {\n  COMPLETED: i18n.t('Completed'),\n  DISABLED: i18n.t('Disabled'),\n  DONE: i18n.t('Done'),\n  FAILED: i18n.t('Failed'),\n  NOT_STARTED: i18n.t('Not started'),\n  RUNNING: i18n.t('Running'),\n  SCHEDULED: i18n.t('Scheduled'),\n  STOPPED: i18n.t('Stopped')\n};\nexport default jobStatusMap;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '@dhis2/ui';\nimport { hooks } from '../Store';\n/* istanbul ignore next */\n\nconst mutation = {\n  resource: 'jobConfigurations',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  partial: true,\n  data: ({\n    enabled\n  }) => ({\n    enabled\n  })\n};\n\nconst ToggleJobSwitch = ({\n  id,\n  checked,\n  disabled\n}) => {\n  const [toggleJob, {\n    loading\n  }] = useDataMutation(mutation);\n  const refetchJobs = hooks.useRefetchJobs();\n  const enabled = !checked;\n  return /*#__PURE__*/React.createElement(Switch, {\n    name: `toggle-job-${id}`,\n    disabled: disabled || loading,\n    checked: checked,\n    onChange: () => {\n      toggleJob({\n        id,\n        enabled\n      }).then(() => refetchJobs());\n    },\n    ariaLabel: i18n.t('Toggle job')\n  });\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nToggleJobSwitch.propTypes = {\n  checked: bool.isRequired,\n  disabled: bool.isRequired,\n  id: string.isRequired\n};\nexport default ToggleJobSwitch;","import { createHashHistory } from 'history';\nconst history = createHashHistory();\nexport default history;","import history from './history';\nexport default history;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst EditJobAction = ({\n  id\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(`/edit/${id}`),\n  label: i18n.t('Edit')\n});\n\nconst {\n  string\n} = PropTypes;\nEditJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default EditJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst ViewJobAction = ({\n  id\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(`/view/${id}`),\n  label: i18n.t('View')\n});\n\nconst {\n  string\n} = PropTypes;\nViewJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default ViewJobAction;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Radio } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst cronPresets = [{\n  label: i18n.t('Every hour'),\n  value: '0 0 * ? * *'\n}, {\n  label: i18n.t('Every day at midnight'),\n  value: '0 0 1 ? * *'\n}, {\n  label: i18n.t('Every day at 3 am'),\n  value: '0 0 3 ? * *'\n}, {\n  label: i18n.t('Every day at noon'),\n  value: '0 0 12 ? * MON-FRI'\n}, {\n  label: i18n.t('Every week'),\n  value: '0 0 3 ? * MON'\n}];\n\nconst CronPresetModal = ({\n  setCron,\n  hideModal\n}) => {\n  const [currentPreset, setCurrentPreset] = useState('');\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Choose a preset time/interval')), /*#__PURE__*/React.createElement(ModalContent, null, cronPresets.map(preset => /*#__PURE__*/React.createElement(Radio, _extends({}, preset, {\n    checked: currentPreset === preset.value,\n    key: preset.value,\n    onChange: ({\n      value\n    }) => setCurrentPreset(value)\n  })))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: hideModal,\n    name: \"hide-modal\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    name: \"insert-preset\",\n    disabled: !currentPreset,\n    onClick: () => {\n      hideModal();\n      setCron(currentPreset);\n    }\n  }, i18n.t('Insert preset')))));\n};\n\nconst {\n  func\n} = PropTypes;\nCronPresetModal.propTypes = {\n  hideModal: func.isRequired,\n  setCron: func.isRequired\n};\nexport default CronPresetModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataMutation } from '@dhis2/app-runtime';\nconst mutation = {\n  resource: 'jobConfigurations',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  type: 'delete'\n};\n\nconst DeleteJobModal = ({\n  id,\n  hideModal,\n  onSuccess\n}) => {\n  const [deleteJob] = useDataMutation(mutation);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete this job?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `delete-job-${id}`,\n    destructive: true,\n    onClick: () => {\n      deleteJob({\n        id\n      }).then(() => {\n        hideModal();\n        onSuccess();\n      });\n    }\n  }, i18n.t('Delete')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nDeleteJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst DiscardFormModal = ({\n  hideModal\n}) => /*#__PURE__*/React.createElement(Modal, {\n  open: true,\n  small: true,\n  onClose: hideModal\n}, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to discard this form?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n  end: true\n}, /*#__PURE__*/React.createElement(Button, {\n  name: \"cancel-discard-form\",\n  secondary: true,\n  onClick: hideModal\n}, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n  name: \"discard-form\",\n  destructive: true,\n  onClick: () => {\n    hideModal();\n    history.push('/');\n  }\n}, i18n.t('Discard')))));\n\nconst {\n  func\n} = PropTypes;\nDiscardFormModal.propTypes = {\n  hideModal: func.isRequired\n};\nexport default DiscardFormModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\n\nconst RunJobModal = ({\n  id,\n  hideModal\n}) => {\n  const [mutation] = useState({\n    resource: `jobConfigurations/${id}/execute`,\n    type: 'create'\n  });\n  const [runJob, {\n    loading,\n    error\n  }] = useDataMutation(mutation, {\n    onComplete: () => {\n      hideModal();\n      refetchJobs();\n    }\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, error && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Error running job')\n  }, error.message), /*#__PURE__*/React.createElement(\"p\", null, i18n.t('Are you sure you want to run this job?'))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal,\n    disabled: loading\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `run-job-${id}`,\n    primary: true,\n    onClick: runJob,\n    loading: loading\n  }, i18n.t('Run')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nRunJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired\n};\nexport default RunJobModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { RunJobModal } from '../Modal';\n\nconst RunJobAction = ({\n  id\n}) => {\n  const {\n    enabled\n  } = hooks.useJob(id);\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    disabled: !enabled,\n    label: i18n.t('Run manually')\n  }), showModal && /*#__PURE__*/React.createElement(RunJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nRunJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default RunJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\nimport { hooks } from '../Store';\n\nconst DeleteJobAction = ({\n  id\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    destructive: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    label: i18n.t('Delete')\n  }), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: refetchJobs\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nDeleteJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default DeleteJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { FlyoutMenu, DropdownButton } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport EditJobAction from './EditJobAction';\nimport ViewJobAction from './ViewJobAction';\nimport RunJobAction from './RunJobAction';\nimport DeleteJobAction from './DeleteJobAction';\n\nconst Actions = ({\n  id,\n  configurable\n}) => /*#__PURE__*/React.createElement(DropdownButton, {\n  small: true,\n  component: /*#__PURE__*/React.createElement(FlyoutMenu, null, configurable ? /*#__PURE__*/React.createElement(EditJobAction, {\n    id: id\n  }) : /*#__PURE__*/React.createElement(ViewJobAction, {\n    id: id\n  }), configurable && /*#__PURE__*/React.createElement(RunJobAction, {\n    id: id\n  }), configurable && /*#__PURE__*/React.createElement(DeleteJobAction, {\n    id: id\n  }))\n}, i18n.t('Actions'));\n\nActions.defaultProps = {\n  configurable: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nActions.propTypes = {\n  id: string.isRequired,\n  configurable: bool\n};\nexport default Actions;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Tag } from '@dhis2/ui';\nimport { jobStatusMap } from '../../services/server-translations';\n\nconst Status = ({\n  status\n}) => {\n  switch (status) {\n    case 'STOPPED':\n    case 'DISABLED':\n      return /*#__PURE__*/React.createElement(Tag, null, jobStatusMap[status]);\n\n    case 'RUNNING':\n    case 'NOT_STARTED':\n    case 'SCHEDULED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        neutral: true\n      }, jobStatusMap[status]);\n\n    case 'FAILED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        negative: true\n      }, jobStatusMap[status]);\n\n    case 'DONE':\n      return /*#__PURE__*/React.createElement(Tag, {\n        positive: true\n      }, jobStatusMap[status]);\n    // Unrecognised status\n\n    default:\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nStatus.propTypes = {\n  status: string.isRequired\n};\nexport default Status;","import moment from 'moment';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nconst NextRun = ({\n  nextExecutionTime,\n  enabled\n}) => {\n  if (!enabled || !nextExecutionTime) {\n    return '-';\n  }\n\n  const now = moment(Date.now());\n  /**\n   * The recommendation is to run dhis2 on a server set to UTC time.\n   * In that case this timestamp is also UTC. If those recommendations\n   * weren't followed the time could be off, but there's nothing\n   * we can do to detect that.\n   */\n\n  const nextRun = moment.utc(nextExecutionTime);\n  const nextRunIsInPast = nextRun.isSameOrBefore(now, 'minute');\n  /**\n   * If the time is in the past, that could mean that the task is running,\n   * and the nextExecutionTime hasn't been updated yet.\n   */\n\n  if (nextRunIsInPast) {\n    return i18n.t('Not scheduled');\n  }\n\n  return now.to(nextRun);\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nNextRun.propTypes = {\n  enabled: bool.isRequired,\n  nextExecutionTime: string\n};\nexport default NextRun;","const WEEKDAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\nconst isValidFields = fields => fields && fields.length === 6;\n\nconst isValidNumber = (number, x, y) => number >= x && number <= y;\n\nconst isWildcard = field => field === '*';\n\nconst isUndefined = field => field === '?';\n\nconst isValidNumberRange = (range, x, y) => {\n  const boundaries = range.split('-');\n\n  if (!boundaries || boundaries.length !== 2) {\n    return false;\n  }\n\n  return isValidNumber(boundaries[0], x, y) && isValidNumber(boundaries[1], x, y) && boundaries[0] <= boundaries[1];\n};\n\nconst isValidFraction = (fraction, x, y) => {\n  const components = fraction.split('/');\n\n  if (!components || components.length !== 2) {\n    return false;\n  }\n  /* istanbul ignore next */\n\n\n  return (isWildcard(components[0]) || isValidNumber(components[0], x, y)) && isValidNumber(components[1], x, y);\n};\n\nconst isAlphabeticWeekday = field => {\n  const weekdays = field.split('-');\n  const [firstDay, secondDay] = weekdays.map(c => WEEKDAYS.indexOf(c));\n  return firstDay !== -1 && secondDay === undefined || firstDay !== -1 && secondDay !== -1 && firstDay <= secondDay;\n};\n\nconst isAlphabeticMonth = field => {\n  const months = field.split('-');\n  const [firstMonth, secondMonth] = months.map(m => MONTHS.indexOf(m));\n  /* istanbul ignore next */\n\n  return firstMonth !== -1 && secondMonth === undefined || firstMonth !== -1 && secondMonth !== -1 && firstMonth <= secondMonth;\n};\n\nconst isValidWithinRange = (field, x, y) => isWildcard(field) || isValidNumber(field, x, y) || isValidNumberRange(field, x, y) || isValidFraction(field, x, y);\n\nconst isValidSecondField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidMinuteField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidHourField = field => isValidWithinRange(field, 0, 23);\n\nconst isValidDayField = field => isValidWithinRange(field, 0, 31) || isUndefined(field);\n\nconst isValidMonthField = field => isValidWithinRange(field, 1, 12) || isAlphabeticMonth(field);\n\nconst isValidWeekdayField = field => isValidWithinRange(field, 1, 7) || isAlphabeticWeekday(field) || isUndefined(field);\n/**\n * Cron expression validation. Validates the Spring Scheduling pattern.\n * Format: <second> <minute> <hour> <day-of-month> <month> <day-of-week>\n * Source code: https://git.io/vpoqG\n * Documentation: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html\n */\n\n\nconst validateCron = exp => {\n  if (!exp) {\n    return false;\n  }\n\n  const fields = exp.trim().split(' ');\n\n  if (!isValidFields(fields)) {\n    return false;\n  }\n\n  return isValidSecondField(fields[0]) && isValidMinuteField(fields[1]) && isValidHourField(fields[2]) && isValidDayField(fields[3]) && isValidMonthField(fields[4]) && isValidWeekdayField(fields[5]);\n};\n\nexport default validateCron;","import i18n from '@dhis2/d2-i18n';\nimport validateCron from './validate-cron';\n\nconst requiredCron = value => {\n  const isString = typeof value === 'string';\n  const isFilled = isString && value.length > 0;\n\n  if (!isFilled) {\n    return i18n.t('A CRON expression is required');\n  }\n\n  if (!validateCron(value)) {\n    return i18n.t('Please enter a valid CRON expression');\n  }\n\n  return undefined;\n};\n\nexport default requiredCron;","import cronstrue from 'cronstrue/i18n';\nimport i18n from '@dhis2/d2-i18n';\nimport { validateCron } from '../validators';\nconst fallback = 'en';\n\nconst translateCron = cron => {\n  const locale = i18n.language || fallback;\n  const isValid = cron && validateCron(cron);\n\n  if (!isValid) {\n    return '';\n  }\n\n  return cronstrue.toString(cron, {\n    locale\n  });\n};\n\nexport default translateCron;","import translateCron from './translate-cron';\nexport default translateCron;","import { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport translateCron from '../../services/translate-cron';\n\nconst Schedule = ({\n  cronExpression,\n  schedulingType,\n  delay\n}) => {\n  switch (schedulingType) {\n    case 'CRON':\n      return translateCron(cronExpression);\n\n    case 'FIXED_DELAY':\n      return i18n.t('{{ delay }} seconds after last run', {\n        delay\n      });\n\n    default:\n      // Unrecognised or invalid type\n      return '-';\n  }\n};\n\nconst {\n  string,\n  number\n} = PropTypes;\nSchedule.propTypes = {\n  schedulingType: string.isRequired,\n  cronExpression: string,\n  delay: number\n};\nexport default Schedule;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableRow, TableCell } from '@dhis2/ui';\nimport { jobTypesMap } from '../../services/server-translations';\nimport { ToggleJobSwitch } from '../Switches';\nimport Actions from './Actions';\nimport Status from './Status';\nimport NextRun from './NextRun';\nimport Schedule from './Schedule';\n\nconst JobTableRow = ({\n  job: {\n    id,\n    displayName,\n    jobType,\n    cronExpression,\n    delay,\n    jobStatus,\n    nextExecutionTime,\n    schedulingType,\n    enabled,\n    configurable\n  }\n}) => /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n  role: \"rowheader\"\n}, displayName), /*#__PURE__*/React.createElement(TableCell, null, jobTypesMap[jobType]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Schedule, {\n  cronExpression: cronExpression,\n  delay: delay,\n  schedulingType: schedulingType\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(NextRun, {\n  nextExecutionTime: nextExecutionTime,\n  enabled: enabled\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Status, {\n  status: jobStatus\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(ToggleJobSwitch, {\n  id: id,\n  checked: enabled,\n  disabled: !configurable\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Actions, {\n  id: id,\n  configurable: configurable\n})));\n\nconst {\n  shape,\n  string,\n  bool,\n  number\n} = PropTypes;\nJobTableRow.propTypes = {\n  job: shape({\n    displayName: string.isRequired,\n    enabled: bool.isRequired,\n    id: string.isRequired,\n    jobStatus: string.isRequired,\n    jobType: string.isRequired,\n    schedulingType: string.isRequired,\n    cronExpression: string,\n    delay: number,\n    nextExecutionTime: string\n  }).isRequired\n};\nexport default JobTableRow;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport JobTableRow from './JobTableRow';\n\nconst JobTable = ({\n  jobs\n}) => /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Job name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Schedule')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Next run')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Status')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('On/off')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, jobs.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, i18n.t('No jobs to display'))) : jobs.map(job => /*#__PURE__*/React.createElement(JobTableRow, {\n  key: job.id,\n  job: job\n}))));\n\nconst {\n  object,\n  arrayOf\n} = PropTypes;\nJobTable.propTypes = {\n  jobs: arrayOf(object).isRequired\n};\nexport default JobTable;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport styles from './LinkButton.module.css';\n\nconst LinkButton = ({\n  className,\n  small,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    className: cx(styles.linkButton, {\n      [styles.small]: small\n    }, className)\n  }, rest));\n};\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default LinkButton;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, Checkbox, InputField, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobTable } from '../../components/JobTable';\nimport { LinkButton } from '../../components/LinkButton';\nimport styles from './JobList.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobList = ({\n  jobs,\n  showSystemJobs,\n  setShowSystemJobs,\n  jobFilter,\n  setJobFilter\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n  className: styles.header\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headerTitle\n}, i18n.t('Scheduled jobs')), /*#__PURE__*/React.createElement(\"a\", {\n  href: infoLink,\n  className: styles.headerLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: styles.headerLinkIcon\n}, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.controlContainer\n}, /*#__PURE__*/React.createElement(InputField, {\n  dataTest: \"job-filter-input\",\n  label: i18n.t('Filter jobs'),\n  onChange: ({\n    value\n  }) => {\n    setJobFilter(value);\n  },\n  value: jobFilter,\n  type: \"search\",\n  role: \"searchbox\",\n  name: \"job-filter\"\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.controlRight\n}, /*#__PURE__*/React.createElement(Checkbox, {\n  dataTest: \"job-toggle-checkbox\",\n  checked: showSystemJobs,\n  label: i18n.t('Include system jobs in list'),\n  onChange: ({\n    checked\n  }) => {\n    setShowSystemJobs(checked);\n  }\n}), /*#__PURE__*/React.createElement(LinkButton, {\n  to: \"/add\"\n}, i18n.t('New job')))), /*#__PURE__*/React.createElement(JobTable, {\n  jobs: jobs\n})));\n\nconst {\n  bool,\n  object,\n  string,\n  arrayOf,\n  func\n} = PropTypes;\nJobList.propTypes = {\n  jobFilter: string.isRequired,\n  jobs: arrayOf(object).isRequired,\n  setJobFilter: func.isRequired,\n  setShowSystemJobs: func.isRequired,\n  showSystemJobs: bool.isRequired\n};\nexport default JobList;","import React from 'react';\nimport { hooks } from '../../components/Store';\nimport JobList from './JobList';\n\nconst JobListContainer = () => {\n  const [jobFilter, setJobFilter] = hooks.useJobFilter();\n  const [showSystemJobs, setShowSystemJobs] = hooks.useShowSystemJobs();\n  const jobs = hooks.useJobListJobs();\n  return /*#__PURE__*/React.createElement(JobList, {\n    jobs: jobs,\n    showSystemJobs: showSystemJobs,\n    setShowSystemJobs: setShowSystemJobs,\n    jobFilter: jobFilter,\n    setJobFilter: setJobFilter\n  });\n};\n\nexport default JobListContainer;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { CronPresetModal } from '../Modal';\n\nconst CronPresetButton = ({\n  setCron,\n  small\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowModal(true),\n    small: small\n  }, i18n.t('Choose from preset times')), showModal && /*#__PURE__*/React.createElement(CronPresetModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    setCron: setCron\n  }));\n};\n\nCronPresetButton.defaultProps = {\n  small: false\n};\nconst {\n  func,\n  bool\n} = PropTypes;\nCronPresetButton.propTypes = {\n  setCron: func.isRequired,\n  small: bool\n};\nexport default CronPresetButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\n\nconst DeleteJobButton = ({\n  id,\n  onSuccess\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowModal(true)\n  }, i18n.t('Delete job')), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: onSuccess\n  }));\n};\n\nconst {\n  string,\n  func\n} = PropTypes;\nDeleteJobButton.propTypes = {\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormModal } from '../Modal';\n\nconst DiscardFormButton = ({\n  shouldConfirm,\n  children,\n  small,\n  className\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const onClick = shouldConfirm ? () => setShowModal(true) : () => history.push('/');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClick,\n    small: small,\n    className: className\n  }, children), showModal && /*#__PURE__*/React.createElement(DiscardFormModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nDiscardFormButton.defaultProps = {\n  className: '',\n  shouldConfirm: false,\n  small: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nDiscardFormButton.propTypes = {\n  children: string.isRequired,\n  className: string,\n  shouldConfirm: bool,\n  small: bool\n};\nexport default DiscardFormButton;","import { FinalForm } from '@dhis2/ui';\nconst {\n  FORM_ERROR\n} = FinalForm;\n/**\n * Formats the errors returned by our backend to a format that final-form can parse\n */\n\nconst formatError = error => {\n  const {\n    details: {\n      response\n    }\n  } = error;\n  const validationErrors = {};\n  /**\n   * Some backend errors do not have a way for us to infer the related field,\n   * those can be put in genericErrors\n   */\n\n  const genericErrors = [];\n\n  if (response.errorReports && response.errorReports.length) {\n    response.errorReports.forEach(report => {\n      /**\n       * errorProperty is how the backend indicates the field that the error\n       * is related to. If we know this, return it as a field specific error\n       * (note that this will swallow errors if the backend indicates a field\n       * that does not exist in the frontend). Otherwise we'll push it to the\n       * generic errors.\n       */\n      if (report.errorProperty) {\n        validationErrors[report.errorProperty] = report.message;\n      } else {\n        genericErrors.push(report.message);\n      }\n    });\n  }\n\n  if (genericErrors.length > 0) {\n    validationErrors[FORM_ERROR] = genericErrors;\n  }\n\n  return validationErrors;\n};\n\nexport default formatError;","import formatError from './format-error';\nexport default formatError;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'create',\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useSubmitJob = () => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const submitJob = job => engine.mutate(mutation, {\n    variables: {\n      job\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [submitJob];\n};\n\nexport default useSubmitJob;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'update',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useUpdateJob = ({\n  id\n}) => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const updateJob = job => engine.mutate(mutation, {\n    variables: {\n      job,\n      id\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [updateJob];\n};\n\nexport default useUpdateJob;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './FormErrorBox.module.css';\n\nconst FormErrorBox = ({\n  submitError\n}) => {\n  const hasGenericSubmitErrors = submitError.length > 0;\n\n  if (!hasGenericSubmitErrors) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst creating your job')\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list\n  }, submitError.map(error => /*#__PURE__*/React.createElement(\"li\", {\n    key: error\n  }, error))));\n};\n\nconst {\n  array\n} = PropTypes;\nFormErrorBox.propTypes = {\n  submitError: array.isRequired\n};\nexport default FormErrorBox;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'name';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobNameField = () => /*#__PURE__*/React.createElement(Field, {\n  name: FIELD_NAME,\n  component: InputFieldFF,\n  validate: VALIDATOR,\n  label: i18n.t('Name'),\n  type: \"text\",\n  required: true\n});\n\nexport default JobNameField;","import React from 'react';\nimport { ReactFinalForm, SingleSelectFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { jobTypesMap } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nexport const FIELD_NAME = 'jobType';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobTypeField = () => {\n  const jobTypes = hooks.useAllJobTypes();\n  const options = jobTypes.map(({\n    jobType\n  }) => ({\n    value: jobType,\n    label: jobTypesMap[jobType]\n  })).filter(job => !!job.label).sort((job1, job2) => job1.label.localeCompare(job2.label));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    component: SingleSelectFieldFF,\n    options: options,\n    label: i18n.t('Job type'),\n    required: true\n  });\n};\n\nexport default JobTypeField;","/**\n * Our backend returns certain values as a number, but our\n * inputs expect and return a string, so we're formatting them to strings\n */\nexport const formatToString = value => {\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  return value;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MultiSelectField, ReactFinalForm, MultiSelectFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { analyticsTableTypes } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SkipTableTypesField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const translatedOptions = options.map(option => ({\n    value: option,\n    label: analyticsTableTypes[option] || option\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: translatedOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nSkipTableTypesField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default SkipTableTypesField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MultiSelectFieldFF, ReactFinalForm, MultiSelectField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nconst {\n  Field\n} = ReactFinalForm; // A labeled options field has options that have both an id and a label.\n\nconst LabeledOptionsField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const labeledOptions = options.map(({\n    id,\n    displayName\n  }) => ({\n    value: id,\n    label: displayName\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: labeledOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nLabeledOptionsField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default LabeledOptionsField;","import i18n from '@dhis2/d2-i18n';\nconst dataIntegrityChecksMap = {\n  program_indicators_with_invalid_expressions: i18n.t('Program indicators with invalid expressions'),\n  data_elements_without_groups: i18n.t('Data elements without groups'),\n  indicators_with_invalid_numerator: i18n.t('Indicators with invalid numerator'),\n  program_rule_actions_without_notification: i18n.t('Program rule actions without notification'),\n  categories_one_default_category_combo: i18n.t('Only one \"default\" category combo should exist'),\n  data_elements_without_data_sets: i18n.t('Data elements without data sets'),\n  category_combos_being_invalid: i18n.t('Category combos being invalid'),\n  indicators_with_identical_formulas: i18n.t('Indicators with identical formulas'),\n  indicators_without_groups: i18n.t('Indicators without groups'),\n  data_elements_in_data_set_not_in_form: i18n.t('Data elements in data set not in form'),\n  program_rules_without_priority: i18n.t('Program rules without priority'),\n  validation_rules_without_groups: i18n.t('Validation rules without groups'),\n  program_indicators_with_invalid_filters: i18n.t('Program indicators with invalid filters'),\n  categories_no_options: i18n.t('Categories with no category options'),\n  program_rules_without_condition: i18n.t('Program rules without condition'),\n  program_rule_actions_without_stage: i18n.t('Program rule actions without stage'),\n  categories_one_default_category: i18n.t('Only one \"default\" category should exist'),\n  categories_unique_category_combo: i18n.t('Lists category combos that share a combination of categories with at least one other category combo'),\n  org_units_with_cyclic_references: i18n.t('Org units with cyclic references'),\n  program_rule_variables_without_data_element: i18n.t('Program rule variables without data element'),\n  validation_rules_with_invalid_right_side_expression: i18n.t('Validation rules with invalid right side expression'),\n  data_sets_not_assigned_to_org_units: i18n.t('Data sets not assigned to org units'),\n  data_elements_violating_exclusive_group_sets: i18n.t('Data elements violating exclusive group sets'),\n  org_unit_groups_without_group_sets: i18n.t('Org unit groups without group sets'),\n  program_rule_variables_without_attribute: i18n.t('Program rule variables without attribute'),\n  org_units_violating_exclusive_group_sets: i18n.t('Org units violating exclusive group sets'),\n  program_rule_actions_without_data_object: i18n.t('Program rule actions without data object'),\n  categories_one_default_category_option: i18n.t('Only one \"default\" category option should exist'),\n  categories_one_default_category_option_combo: i18n.t('Only one \"default\" category option combo should exist'),\n  org_units_without_groups: i18n.t('Org units without groups'),\n  program_indicators_without_expression: i18n.t('Program indicators without expression'),\n  indicators_violating_exclusive_group_sets: i18n.t('Indicators violating exclusive group sets'),\n  periods_duplicates: i18n.t('Periods duplicates'),\n  data_elements_assigned_to_data_sets_with_different_period_types: i18n.t('Data elements assigned to data sets with different period types'),\n  program_rules_without_action: i18n.t('Program rules without action'),\n  org_units_being_orphaned: i18n.t('Org units being orphaned'),\n  validation_rules_with_invalid_left_side_expression: i18n.t('Validation rules with invalid left side expression'),\n  indicators_with_invalid_denominator: i18n.t('Indicators with invalid denominator'),\n  program_rule_actions_without_section: i18n.t('Program rule actions without section')\n};\nexport const severityMap = {\n  WARNING: i18n.t('Warning'),\n  SEVERE: i18n.t('Severe')\n};\nconst reportTypeMap = {\n  REPORT: i18n.t('Report'),\n  SUMMARY: i18n.t('Summary'),\n  DETAILS: i18n.t('Details')\n};\n\nconst snakeCaseToHumanReadable = string => {\n  const split = string.split('_');\n  const [first, ...rest] = split;\n  return first[0].toUpperCase().concat(first.slice(1)).concat(` ${rest.join(' ')}`);\n};\n\nexport const getCheckName = name => dataIntegrityChecksMap[name] || snakeCaseToHumanReadable(name);\nexport const getReportTypeLabel = type => reportTypeMap[type] || snakeCaseToHumanReadable(type);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { FieldGroup, Radio, Transfer, TransferOption, ReactFinalForm, InputFieldFF, Help } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { hooks } from '../Store';\nimport { getCheckName, severityMap } from '../../services/server-translations/dataIntegrityChecks';\nimport styles from './DataIntegrityChecksField.module.css';\nconst {\n  Field,\n  useField\n} = ReactFinalForm;\n\nconst VALIDATOR = value => {\n  // should not validate when null or undefined\n  // means \"Run all\" is selected\n  if (!value == null) {\n    return undefined;\n  }\n\n  if (value && value.length < 1) {\n    return i18n.t('Please select checks to run.');\n  }\n};\n\nconst DataIntegrityChecksField = ({\n  label,\n  name\n}) => {\n  const options = hooks.useParameterOptions('dataIntegrityChecks');\n  const {\n    input: {\n      value,\n      onChange\n    }\n  } = useField(name);\n  const hasValue = !!value && value.length > 0;\n  const [runSelected, setRunSelected] = useState(hasValue);\n  const translatedOptions = options.map(option => ({ ...option,\n    value: option.name,\n    label: getCheckName(option.name),\n    severity: severityMap[option.severity]\n  })).sort((a, b) => a.label.localeCompare(b.label));\n\n  const toggle = ({\n    value\n  }) => {\n    const runSelectedChecked = value === 'true';\n\n    if (!runSelectedChecked) {\n      // clear checks when \"Run all\" is selected\n      // null means all checks will be run\n      onChange(null);\n    } else {\n      // set to empty array explicitly,\n      // this is to allow to differentiate between \"selected checks\" but empty\n      // and \"run all\"-empty for validation\n      onChange([]);\n    }\n\n    setRunSelected(runSelectedChecked);\n  };\n\n  return /*#__PURE__*/React.createElement(FieldGroup, {\n    label: i18n.t('Checks to run')\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'false',\n    label: i18n.t('Run all available checks'),\n    checked: !runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'true',\n    label: i18n.t('Only run selected checks'),\n    checked: runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: ChecksTransfer,\n    options: translatedOptions,\n    label: label,\n    validate: VALIDATOR // conditional rendering of FinalForm-fields cause some issues,\n    // see https://github.com/final-form/react-final-form/issues/809\n    ,\n    hidden: !runSelected\n  }));\n};\n\nconst LabelComponent = ({\n  label,\n  severity,\n  highlighted,\n  disabled\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.transferOption, {\n    [styles.highlighted]: highlighted,\n    [styles.disabled]: disabled\n  })\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.optionName\n}, label), /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.optionSeverity, {\n    [styles.highlighted]: highlighted\n  })\n}, `${i18n.t('Severity')}: ${severity}`));\n\nLabelComponent.propTypes = TransferOption.propTypes;\n\nconst renderOption = option => /*#__PURE__*/React.createElement(TransferOption, _extends({}, option, {\n  label: /*#__PURE__*/React.createElement(LabelComponent, option)\n}));\n\nconst ChecksTransfer = ({\n  input,\n  meta,\n  options = [],\n  hidden\n}) => {\n  const {\n    onChange\n  } = input;\n  const handleChange = useCallback(({\n    selected\n  }) => {\n    onChange(selected);\n  }, [onChange]);\n\n  if (hidden) {\n    return null;\n  }\n\n  const isErr = meta.touched && meta.invalid;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: input.value || [],\n    renderOption: renderOption,\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: /*#__PURE__*/React.createElement(SelectedEmptyComponent, null),\n    className: styles.transfer\n  }), isErr && /*#__PURE__*/React.createElement(Help, {\n    error: isErr\n  }, meta.error));\n};\n\nChecksTransfer.propTypes = InputFieldFF.propTypes;\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select checks to run.'));\n\nconst {\n  string\n} = PropTypes;\nDataIntegrityChecksField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired\n};\nexport default DataIntegrityChecksField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getReportTypeLabel } from '../../services/server-translations/dataIntegrityChecks';\nconst {\n  Field\n} = ReactFinalForm;\nconst DEFAULT_VALUE = 'REPORT';\n\nconst DataIntegrityReportTypeField = ({\n  name,\n  constants\n}) => {\n  if (!constants) {\n    // shouldn't really happen, but backend defaults to \"report\" if no value\n    return null;\n  }\n\n  const labeledOptions = constants.map(type => ({\n    value: type,\n    label: getReportTypeLabel(type)\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: SingleSelectFieldFF,\n    initialValue: DEFAULT_VALUE,\n    options: labeledOptions,\n    label: i18n.t('Report type')\n  });\n};\n\nconst {\n  string,\n  arrayOf\n} = PropTypes;\nDataIntegrityReportTypeField.propTypes = {\n  name: string.isRequired,\n  constants: arrayOf(string)\n};\nexport default DataIntegrityReportTypeField;","import i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, NoticeBox, ReactFinalForm, Transfer, Field } from '@dhis2/ui';\nimport React, { useCallback } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport styles from './AggregatedDataExchangeField.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst query = {\n  dataExchangeIds: {\n    resource: 'aggregateDataExchanges',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: true\n    }\n  }\n};\n\nconst validate = value => {\n  if (!value || value && value.length < 1) {\n    return i18n.t('Please select data exchange ids.');\n  }\n};\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select data exchange ids'));\n\nconst AggregatedDataExchangeField = ({\n  label,\n  name\n}) => {\n  var _data$dataExchangeIds, _data$dataExchangeIds2, _meta$error;\n\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n  const {\n    input,\n    meta\n  } = useField(name, {\n    beforeSubmit: () => !loading || !error,\n    validate\n  });\n  const handleChange = useCallback(({\n    selected\n  }) => {\n    input === null || input === void 0 ? void 0 : input.onChange(selected);\n  }, [input]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CircularLoader, null);\n  }\n\n  if (error) {\n    var _error$details, _error$details2;\n\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('There was a problem fetching data exchange ids')\n    }, /*#__PURE__*/React.createElement(\"details\", null, /*#__PURE__*/React.createElement(\"summary\", null, `${i18n.t('error type')} - ${error.type}`), ((_error$details = error.details) === null || _error$details === void 0 ? void 0 : _error$details.message) && /*#__PURE__*/React.createElement(\"p\", null, (_error$details2 = error.details) === null || _error$details2 === void 0 ? void 0 : _error$details2.message)));\n  }\n\n  const options = (_data$dataExchangeIds = (_data$dataExchangeIds2 = data.dataExchangeIds) === null || _data$dataExchangeIds2 === void 0 ? void 0 : _data$dataExchangeIds2.aggregateDataExchanges.map(exchangeIds => ({\n    label: exchangeIds.displayName,\n    value: exchangeIds.id\n  }))) !== null && _data$dataExchangeIds !== void 0 ? _data$dataExchangeIds : [];\n  return /*#__PURE__*/React.createElement(Field, {\n    label: label,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.message,\n    error: !!meta.error,\n    name: name,\n    required: true,\n    className: styles.field\n  }, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: (input === null || input === void 0 ? void 0 : input.value) || [],\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: SelectedEmptyComponent\n  }));\n};\n\nAggregatedDataExchangeField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default AggregatedDataExchangeField;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, InputFieldFF, Box, SwitchFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { formatToString } from './formatters';\nimport SkipTableTypesField from './SkipTableTypesField';\nimport LabeledOptionsField from './LabeledOptionsField';\nimport DataIntegrityChecksField from './DataIntegrityChecksField';\nimport DataIntegrityReportTypeField from './DataIntegrityReportTypeField';\nimport styles from './ParameterFields.module.css';\nimport AggregatedDataExchangeField from './AggregatedDataExchangeField';\nconst {\n  Field\n} = ReactFinalForm; // The key under which the parameters will be sent to the backend\n\nconst FIELD_NAME = 'jobParameters';\nconst JOB_TYPES = {\n  DATA_INTEGRITY: 'DATA_INTEGRITY',\n  AGGREGATE_DATA_EXCHANGE: 'AGGREGATE_DATA_EXCHANGE'\n};\n\nconst getCustomComponent = (jobType, parameterName) => {\n  if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'checks') {\n    return DataIntegrityChecksField;\n  } else if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'type') {\n    return DataIntegrityReportTypeField;\n  } else if (jobType === JOB_TYPES.AGGREGATE_DATA_EXCHANGE) {\n    return AggregatedDataExchangeField;\n  } else if (parameterName === 'skipTableTypes') {\n    return SkipTableTypesField;\n  }\n\n  return null;\n}; // Renders all parameters for a given jobtype\n\n\nconst ParameterFields = ({\n  jobType\n}) => {\n  const parameters = hooks.useJobTypeParameters(jobType);\n\n  if (parameters.length === 0) {\n    return null;\n  } // Map all parameters to the appropriate field types\n\n\n  const parameterComponents = parameters.map(({\n    fieldName,\n    name,\n    klass,\n    ...rest\n  }) => {\n    const defaultProps = {\n      label: fieldName,\n      name: `${FIELD_NAME}.${name}`\n    };\n    const parameterProps = {\n      fieldName,\n      name,\n      klass,\n      ...rest\n    };\n    let parameterComponent = null;\n    const CustomParameterComponent = getCustomComponent(jobType, name);\n\n    if (CustomParameterComponent) {\n      return /*#__PURE__*/React.createElement(Box, {\n        marginTop: \"16px\",\n        key: name\n      }, /*#__PURE__*/React.createElement(CustomParameterComponent, _extends({}, parameterProps, defaultProps, {\n        parameterName: name\n      })));\n    } // Generic field rendering\n\n\n    switch (klass) {\n      case 'java.lang.String':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          type: \"text\"\n        }));\n        break;\n\n      case 'java.lang.Boolean':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: SwitchFieldFF,\n          type: \"checkbox\"\n        }));\n        break;\n\n      case 'java.lang.Integer':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          format: formatToString,\n          type: \"number\"\n        }));\n        break;\n\n      case 'java.util.List':\n        parameterComponent = /*#__PURE__*/React.createElement(LabeledOptionsField, _extends({}, defaultProps, {\n          parameterName: name\n        }));\n        break;\n    } // Wrap all components in a Box for spacing\n\n\n    return /*#__PURE__*/React.createElement(Box, {\n      marginTop: \"16px\",\n      key: name\n    }, parameterComponent);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.headerTitle\n  }, i18n.t('Parameters'))), parameterComponents);\n};\n\nconst {\n  string\n} = PropTypes;\nParameterFields.propTypes = {\n  jobType: string.isRequired\n};\nexport default ParameterFields;","import React from 'react';\nimport { Box, ReactFinalForm, InputFieldFF } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { requiredCron } from '../../services/validators';\nimport { CronPresetButton } from '../Buttons';\nimport translateCron from '../../services/translate-cron';\nconst {\n  Field,\n  useFormState,\n  useForm\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'cronExpression';\nconst VALIDATOR = requiredCron;\n\nconst CronField = () => {\n  const form = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const cronExpression = values[FIELD_NAME];\n  const helpText = translateCron(cronExpression);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n    component: InputFieldFF,\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    label: i18n.t('CRON Expression'),\n    type: \"text\",\n    helpText: helpText,\n    required: true\n  }), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"8px\"\n  }, /*#__PURE__*/React.createElement(CronPresetButton, {\n    setCron:\n    /* istanbul ignore next */\n    cron => form.change(FIELD_NAME, cron),\n    small: true\n  })));\n};\n\nexport default CronField;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, integer, createNumberRange } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { formatToString } from './formatters';\nconst {\n  Field\n} = ReactFinalForm; // Omitting the underscore here since it messes up i18n\n\nconst lowerbound = 1;\nconst upperbound = 86400; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'delay';\nconst VALIDATOR = composeValidators(integer, hasValue, createNumberRange(lowerbound, upperbound));\n\nconst DelayField = () => /*#__PURE__*/React.createElement(Field, {\n  component: InputFieldFF,\n  name: FIELD_NAME,\n  validate: VALIDATOR,\n  label: i18n.t('Delay'),\n  type: \"number\",\n  format: formatToString,\n  helpText: i18n.t('Delay in seconds ({{ lowerbound }} - {{ upperbound }})', {\n    lowerbound,\n    upperbound\n  }),\n  required: true\n});\n\nexport default DelayField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { hooks } from '../Store';\nimport CronField from './CronField';\nimport DelayField from './DelayField';\n\nconst ScheduleField = ({\n  jobType\n}) => {\n  const currentJobType = hooks.useJobType(jobType);\n  const schedulingType = currentJobType.schedulingType;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return /*#__PURE__*/React.createElement(CronField, null);\n\n    case 'FIXED_DELAY':\n      return /*#__PURE__*/React.createElement(DelayField, null);\n\n    default:\n      // Unrecognised scheduling type\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nScheduleField.propTypes = {\n  jobType: string.isRequired\n};\nexport default ScheduleField;","import JobNameField from './JobNameField';\nimport JobTypeField, { FIELD_NAME as JOB_TYPE } from './JobTypeField';\nimport ParameterFields from './ParameterFields';\nimport ScheduleField from './ScheduleField';\nconst fieldNames = {\n  JOB_TYPE\n};\nexport { JobNameField, ScheduleField, JobTypeField, ParameterFields, fieldNames };","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport { DiscardFormButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobAddForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobAddForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel'))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array\n} = PropTypes;\nJobAddForm.defaultProps = {\n  submitError: []\n};\nJobAddForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  pristine: bool.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobAddForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useSubmitJob } from '../../hooks/jobs';\nimport JobAddForm from './JobAddForm';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst JobAddFormContainer = ({\n  setIsPristine\n}) => {\n  const [submitJob] = useSubmitJob();\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitJob,\n    component: JobAddForm,\n    setIsPristine: setIsPristine,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobAddFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobAddFormContainer;","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormButton, DeleteJobButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobEditForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobEditForm = ({\n  id,\n  refetchJobs,\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.deleteButton\n  }, /*#__PURE__*/React.createElement(DeleteJobButton, {\n    id: id,\n    onSuccess: () => {\n      history.push('/');\n      refetchJobs();\n    }\n  }))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array,\n  string\n} = PropTypes;\nJobEditForm.defaultProps = {\n  submitError: []\n};\nJobEditForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  id: string.isRequired,\n  pristine: bool.isRequired,\n  refetchJobs: func.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobEditForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateJob } from '../../hooks/jobs';\nimport { hooks } from '../Store';\nimport JobEditForm from './JobEditForm';\nconst {\n  Form\n} = ReactFinalForm;\n/**\n * The fields we need for the initialValues for our form fields. Since we use\n * these values to set the initial values in final-form, if we wouldn't filter\n * them we'd end up submitting way more data than we intend to.\n */\n\nconst initialFields = ['cronExpression', 'delay', 'jobParameters', 'jobType', 'name'];\n\nconst JobEditFormContainer = ({\n  setIsPristine\n}) => {\n  const {\n    id\n  } = useParams();\n  const [updateJob] = useUpdateJob({\n    id\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  const job = hooks.useJob(id); // Creating an object with just the values we want to use as initial values\n\n  const initialValues = initialFields.reduce((filtered, key) => {\n    filtered[key] = job[key];\n    return filtered;\n  }, {});\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  /* istanbul ignore next: we're testing this section, but coverage reporting seems to disagree */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateJob,\n    component: JobEditForm,\n    setIsPristine: setIsPristine,\n    initialValues: initialValues,\n    id: id,\n    refetchJobs: refetchJobs,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobEditFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobEditFormContainer;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { jobStatusMap } from '../../services/server-translations';\nimport styles from './JobDetails.module.css';\n\nconst JobDetails = ({\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => {\n  // Using Date.now allows for easier mocking\n  const now = Date.now();\n  const createdFromNow = moment(created).from(now);\n  const translatedStatus = jobStatusMap[lastExecutedStatus];\n  const lastRunFromNow = lastExecuted ? moment(lastExecuted).from(now) : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrapper\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.title\n  }, i18n.t('Job details')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details\n  }, /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Created {{ createdFromNow }}.', {\n    createdFromNow\n  })), lastRunFromNow && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run {{ lastRunFromNow }}.', {\n    lastRunFromNow\n  })), translatedStatus && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run status: {{ translatedStatus }}.', {\n    translatedStatus,\n    nsSeparator: '>'\n  }))));\n};\n\nconst {\n  string\n} = PropTypes;\nJobDetails.propTypes = {\n  created: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  lastExecuted: string\n};\nexport default JobDetails;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobEditFormContainer } from '../../components/Forms';\nimport { JobDetails } from '../../components/JobDetails';\nimport styles from './JobEdit.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobEdit = ({\n  isPristine,\n  setIsPristine,\n  name,\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n  className: styles.pageHeader\n}, /*#__PURE__*/React.createElement(DiscardFormButton, {\n  shouldConfirm: !isPristine,\n  className: styles.pageHeaderButton,\n  small: true\n}, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.pageHeaderTitle\n}, i18n.t('Job: {{ name }}', {\n  name,\n  nsSeparator: '>'\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: styles.card\n}, /*#__PURE__*/React.createElement(\"header\", {\n  className: styles.cardHeader\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  className: styles.cardHeaderTitle\n}, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n  href: infoLink,\n  className: styles.cardHeaderLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: styles.cardHeaderInfo\n}, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.jobDetails\n}, /*#__PURE__*/React.createElement(JobDetails, {\n  created: created,\n  lastExecutedStatus: lastExecutedStatus,\n  lastExecuted: lastExecuted\n})), /*#__PURE__*/React.createElement(JobEditFormContainer, {\n  setIsPristine: setIsPristine\n})));\n\nconst {\n  bool,\n  func,\n  string\n} = PropTypes;\nJobEdit.propTypes = {\n  created: string.isRequired,\n  isPristine: bool.isRequired,\n  lastExecuted: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  name: string.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobEdit;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { hooks } from '../../components/Store';\nimport JobEdit from './JobEdit';\n\nconst JobEditContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  const {\n    id\n  } = useParams();\n  const job = hooks.useJob(id);\n  return /*#__PURE__*/React.createElement(JobEdit, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine,\n    name: job.name,\n    created: job.created,\n    lastExecutedStatus: job.lastExecutedStatus,\n    lastExecuted: job.lastExecuted\n  });\n};\n\nexport default JobEditContainer;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, IconInfo16, Box, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../../components/Store';\nimport { LinkButton } from '../../components/LinkButton';\nimport { JobDetails } from '../../components/JobDetails';\nimport translateCron from '../../services/translate-cron';\nimport { jobTypesMap } from '../../services/server-translations';\nimport styles from './JobView.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobView = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted,\n    jobType,\n    cronExpression\n  } = hooks.useJob(id);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\",\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('System job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, /*#__PURE__*/React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('Name'),\n    disabled: true,\n    value: name,\n    name: \"name\"\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(SingleSelectField, {\n    name: \"jobType\",\n    label: i18n.t('Job type'),\n    disabled: true,\n    selected: jobType\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('CRON Expression'),\n    name: \"cronExpression\",\n    disabled: true,\n    value: cronExpression,\n    helpText: translateCron(cronExpression)\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"24px\"\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\"\n  }, i18n.t('Back to all jobs')))));\n};\n\nexport default JobView;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobAddFormContainer } from '../../components/Forms';\nimport styles from './JobAdd.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobAdd = ({\n  isPristine,\n  setIsPristine\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n  className: styles.pageHeader\n}, /*#__PURE__*/React.createElement(DiscardFormButton, {\n  shouldConfirm: !isPristine,\n  className: styles.pageHeaderButton,\n  small: true\n}, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.pageHeaderTitle\n}, i18n.t('New Job'))), /*#__PURE__*/React.createElement(Card, {\n  className: styles.card\n}, /*#__PURE__*/React.createElement(\"header\", {\n  className: styles.cardHeader\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  className: styles.cardHeaderTitle\n}, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n  href: infoLink,\n  className: styles.cardHeaderLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: styles.cardHeaderInfo\n}, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(JobAddFormContainer, {\n  setIsPristine: setIsPristine\n})));\n\nconst {\n  bool,\n  func\n} = PropTypes;\nJobAdd.propTypes = {\n  isPristine: bool.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobAdd;","import React, { useState } from 'react';\nimport JobAdd from './JobAdd';\n\nconst JobAddContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  return /*#__PURE__*/React.createElement(JobAdd, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine\n  });\n};\n\nexport default JobAddContainer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport { JobListContainer } from '../../pages/JobList';\nimport { JobEditContainer } from '../../pages/JobEdit';\nimport { JobView } from '../../pages/JobView';\nimport { JobAddContainer } from '../../pages/JobAdd';\nimport history from '../../services/history';\n\nconst Routes = () => /*#__PURE__*/React.createElement(Router, {\n  history: history\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: JobListContainer\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/edit/:id\",\n  component: JobEditContainer\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/view/:id\",\n  component: JobView\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/add\",\n  component: JobAddContainer\n}));\n\nexport default Routes;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { getAuthorized } from './selectors';\nimport styles from './AuthWall.module.css';\nconst query = {\n  me: {\n    resource: 'me'\n  }\n};\n\nconst AuthWall = ({\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * know if the user is authorized, so throw the error.\n     */\n    throw error;\n  }\n\n  const isAuthorized = getAuthorized(data.me);\n\n  if (!isAuthorized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.noticeBoxWrapper\n    }, /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('Not authorized')\n    }, i18n.t(\"You don't have access to the Job Scheduler. Contact a system administrator to request access.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\n\nconst {\n  node\n} = PropTypes;\nAuthWall.propTypes = {\n  children: node.isRequired\n};\nexport default AuthWall;","export const getAuthorized = me => {\n  const {\n    authorities\n  } = me;\n\n  if (!authorities) {\n    return false;\n  }\n\n  const isAuthorized = authorities.includes('ALL') || authorities.includes('F_SCHEDULING_ADMIN');\n  return isAuthorized;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.wrapper\n}, children);\n\nconst {\n  node\n} = PropTypes;\nPageWrapper.propTypes = {\n  children: node.isRequired\n};\nexport default PageWrapper;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { CssVariables } from '@dhis2/ui';\nimport { Routes } from '../Routes';\nimport { AuthWall } from '../AuthWall';\nimport { Store } from '../Store';\nimport { PageWrapper } from '../PageWrapper';\nimport './App.css'; // eslint-disable-next-line import/no-unassigned-import\n\nimport '../../locales'; // The above is necessary for translations to work\n\nconst App = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true,\n  theme: true\n}), /*#__PURE__*/React.createElement(PageWrapper, null, /*#__PURE__*/React.createElement(AuthWall, null, /*#__PURE__*/React.createElement(Store, null, /*#__PURE__*/React.createElement(Routes, null)))));\n\nexport default App;"],"sourceRoot":""}