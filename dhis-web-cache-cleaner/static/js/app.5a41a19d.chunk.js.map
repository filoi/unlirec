{"version":3,"sources":["D2App/actions/Actions.module.css","D2App/clearForm/ClearForm.module.css","D2App/clearForm/FormSection.module.css","D2App/views/Home.module.css","D2App/locales/index.js","D2App/actions/Actions.js","D2App/clearForm/FormSection.js","D2App/clearForm/ClearForm.js","D2App/indexedDb/dbExists.js","D2App/indexedDb/deleteDb.js","D2App/indexedDb/dhis2DatabaseNames.js","D2App/indexedDb/getCaptureAppUserDatabases.js","D2App/indexedDb/openDb.js","D2App/indexedDb/getKeyFromObjectStore.js","D2App/indexedDb/useClearableDatabaseKeys.js","D2App/indexedDb/getClearableDatabases.js","D2App/storage/clearStoragesByKey.js","D2App/storage/reservedStorageKeys.js","D2App/storage/useClearableStorageKeys.js","D2App/storage/getClearableKeys.js","D2App/views/Home/deleteValues.js","D2App/indexedDb/clearDatabasesByKey.js","D2App/views/Home.js","D2App/views/Home/formatDeleteValues.js","D2App/App.js"],"names":["module","exports","namespace","i18n","addResources","arTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","Actions","children","React","createElement","className","styles","actions","ButtonStrip","Field","ReactFinalForm","FormSection","deselectButtonLabel","emptyMessage","form","headline","selectButtonLabel","storageKeys","storageName","storageDataTestName","toLowerCase","container","groupHeadline","length","Button","onClick","change","dataTest","FieldGroupFF","map","key","type","component","CheckboxFieldFF","name","label","value","Form","validate","values","errors","localStorageKeys","sessionStorageKeys","indexedDatabaseKeys","FORM_ERROR","t","ClearForm","onSubmit","initialValues","handleSubmit","submitFailed","batch","selectAll","deselectAll","disabled","destructive","formErrors","Help","error","defaultProps","dbExists","Promise","resolve","reject","alreadyExists","request","window","indexedDB","open","onsuccess","result","close","deleteDb","then","onerror","onupgradeneeded","succeedWhenNonExistant","exists","deleteDatabase","dhis2DatabaseNames","getCaptureAppUserDatabases","async","db","dbNames","captureDbExists","data","storeName","transaction","objectStore","get","event","target","e","getKeyFromObjectStore","useClearableDatabaseKeys","refetchCounter","setRefetchCounter","useState","loading","setLoading","setData","staticDatabases","userDatabases","useEffect","all","keys","filter","catch","operation","refetch","clearStoragesByKey","storage","forEach","removeItem","reduce","success","getItem","reservedStorageKeys","Object","Storage","prototype","useClearableStorageKeys","existingKeys","setExistingKeys","onStorageChange","useCallback","existing","includes","getClearableKeys","deleteValues","_values$indexedDB","localStorage","sessionStorage","clearSessionStorageByKeys","allDeleteProcesses","clearDatabasesByKey","Home","refetchLocalStorageKeys","refetchSessionStorageKeys","refetchIndexedDatabaseKeys","showContent","message","Fragment","formattedValues","shouldDeleteUserDatabases","formatDeleteValues","App","CssVariables","colors","spacers"],"mappings":"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","file":"static/js/app.5a41a19d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"Actions_actions__1BcAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ClearForm_actions__2P0VA\",\"action\":\"ClearForm_action__243lJ\",\"groupHeadline\":\"ClearForm_groupHeadline__2C-rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormSection_container__20Fh9\",\"groupHeadline\":\"FormSection_groupHeadline__3kOHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2aYrM\",\"headline\":\"Home_headline__2WsGZ\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import propTypes from '@dhis2/prop-types';\nimport { ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport styles from './Actions.module.css';\nexport const Actions = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.actions\n}, /*#__PURE__*/React.createElement(ButtonStrip, null, children));\nActions.propTypes = {\n  children: propTypes.node\n};","import propTypes from '@dhis2/prop-types';\nimport { Button, FieldGroupFF, ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './FormSection.module.css';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FormSection = ({\n  deselectButtonLabel,\n  emptyMessage,\n  form,\n  headline,\n  selectButtonLabel,\n  storageKeys,\n  storageName\n}) => {\n  const storageDataTestName = storageName.toLowerCase();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": `dhis2-cachecleaner-${storageDataTestName}`\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.groupHeadline\n  }, headline), !storageKeys.length && /*#__PURE__*/React.createElement(\"p\", {\n    \"data-test\": \"dhis2-cachecleaner-emptystoragemessage\"\n  }, emptyMessage), !!storageKeys.length && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => form.change(storageName, storageKeys),\n    dataTest: `dhis2-cachecleaner-formsection-selectall`\n  }, selectButtonLabel), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => form.change(storageName, []),\n    dataTest: `dhis2-cachecleaner-formsection-deselectall`\n  }, deselectButtonLabel)), /*#__PURE__*/React.createElement(FieldGroupFF, null, storageKeys.map(key => {\n    return /*#__PURE__*/React.createElement(Field, {\n      type: \"checkbox\",\n      component: CheckboxFieldFF,\n      name: storageName,\n      label: key,\n      key: key,\n      value: key\n    });\n  })));\n};\nFormSection.propTypes = {\n  deselectButtonLabel: propTypes.string.isRequired,\n  emptyMessage: propTypes.string.isRequired,\n  form: propTypes.shape({\n    change: propTypes.func.isRequired\n  }).isRequired,\n  headline: propTypes.string.isRequired,\n  selectButtonLabel: propTypes.string.isRequired,\n  storageKeys: propTypes.arrayOf(propTypes.string).isRequired,\n  storageName: propTypes.string.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport propTypes from '@dhis2/prop-types';\nimport { Button, Help, ReactFinalForm } from '@dhis2/ui';\nimport { FORM_ERROR } from 'final-form';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './ClearForm.module.css';\nimport { FormSection } from './FormSection.js';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.localStorageKeys.length && !values.sessionStorageKeys.length && !values.indexedDatabaseKeys.length) {\n    errors[FORM_ERROR] = i18n.t('No data selected');\n  }\n\n  return errors;\n};\n\nexport const ClearForm = ({\n  onSubmit,\n  initialValues,\n  localStorageKeys,\n  sessionStorageKeys,\n  indexedDatabaseKeys\n}) => {\n  const selectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', localStorageKeys);\n      form.change('sessionStorageKeys', sessionStorageKeys);\n      form.change('indexedDatabaseKeys', indexedDatabaseKeys);\n    });\n  };\n\n  const deselectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', []);\n      form.change('sessionStorageKeys', []);\n      form.change('indexedDatabaseKeys', []);\n    });\n  };\n\n  const onFormSubmit = values => {\n    onSubmit(values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onFormSubmit,\n    initialValues: initialValues,\n    validate: validate\n  }, ({\n    handleSubmit,\n    errors,\n    submitFailed,\n    form\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => selectAll(form),\n    dataTest: \"dhis2-cachecleaner-selectall\"\n  }, i18n.t('Select all')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deselectAll(form),\n    dataTest: \"dhis2-cachecleaner-deselectall\"\n  }, i18n.t('Deselect all')), /*#__PURE__*/React.createElement(Button, {\n    disabled: !!errors[FORM_ERROR],\n    destructive: true,\n    type: \"submit\",\n    dataTest: \"dhis2-cachecleaner-clear-top\"\n  }, i18n.t('Clear all selected items'))), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('Local storage empty'),\n    selectButtonLabel: i18n.t('Select all local storage items'),\n    deselectButtonLabel: i18n.t('Deselect all local storage items'),\n    headline: i18n.t('Local storage'),\n    storageKeys: localStorageKeys,\n    storageName: \"localStorageKeys\"\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('Session storage empty'),\n    selectButtonLabel: i18n.t('Select all session storage items'),\n    deselectButtonLabel: i18n.t('Deselect all session storage items'),\n    headline: i18n.t('Session storage'),\n    storageKeys: sessionStorageKeys,\n    storageName: \"sessionStorageKeys\"\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    form: form,\n    emptyMessage: i18n.t('No indexed databases'),\n    selectButtonLabel: i18n.t('Select all databases'),\n    deselectButtonLabel: i18n.t('Deselect all databases'),\n    headline: i18n.t('Indexed database'),\n    storageKeys: indexedDatabaseKeys,\n    storageName: \"indexedDatabaseKeys\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formErrors\n  }, errors[FORM_ERROR] && submitFailed && /*#__PURE__*/React.createElement(Help, {\n    error: true\n  }, errors[FORM_ERROR])), /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: !!errors[FORM_ERROR],\n    destructive: true,\n    type: \"submit\",\n    dataTest: \"dhis2-cachecleaner-clear-bottom\"\n  }, i18n.t('Clear all selected items')))));\n};\nClearForm.defaultProps = {\n  initialValues: {\n    localStorageKeys: [],\n    sessionStorageKeys: [],\n    indexedDatabaseKeys: []\n  }\n};\nClearForm.propTypes = {\n  indexedDatabaseKeys: propTypes.arrayOf(propTypes.string).isRequired,\n  localStorageKeys: propTypes.arrayOf(propTypes.string).isRequired,\n  sessionStorageKeys: propTypes.arrayOf(propTypes.string).isRequired,\n  onSubmit: propTypes.func.isRequired,\n  initialValues: propTypes.shape({\n    indexedDatabaseKeys: propTypes.arrayOf(propTypes.string),\n    localStorageKeys: propTypes.arrayOf(propTypes.string),\n    sessionStorageKeys: propTypes.arrayOf(propTypes.string)\n  })\n};","import { deleteDb } from './deleteDb.js';\n/**\n * @param {string} name\n * @returns {Promise.<bool>}\n */\n\nexport const dbExists = name => new Promise((resolve, reject) => {\n  let alreadyExists = true;\n  const request = window.indexedDB.open(name);\n\n  request.onsuccess = () => {\n    request.result.close();\n\n    if (!alreadyExists) {\n      deleteDb(name).then(() => resolve(false));\n    } else {\n      resolve(true);\n    }\n  };\n\n  request.onerror = error => reject(error);\n\n  request.onupgradeneeded = () => alreadyExists = false;\n});","import { dbExists } from './dbExists.js';\nexport const deleteDb = (name, succeedWhenNonExistant = false) => dbExists(name).then(exists => {\n  if (exists) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.deleteDatabase(name);\n      request.onsuccess = resolve;\n      request.onerror = reject;\n    });\n  }\n\n  return succeedWhenNonExistant ? Promise.resolve() : Promise.reject();\n});","export const dhis2DatabaseNames = ['dhis2ou', 'dhis2', 'dhis2tc', 'dhis2ec', 'dhis2de', 'dhis2er', 'dhis2ca'];","import { dbExists } from './dbExists.js';\nimport { getKeyFromObjectStore } from './getKeyFromObjectStore.js';\nimport { openDb } from './openDb.js';\nconst userCachesStoreName = 'userCaches';\nexport const getCaptureAppUserDatabases = () => dbExists('dhis2ca').then(async captureDbExists => {\n  let db;\n  let dbNames = [];\n\n  if (captureDbExists) {\n    try {\n      db = await openDb('dhis2ca');\n      const data = await getKeyFromObjectStore(db, userCachesStoreName, 'accessHistory');\n\n      if (data && data.values) {\n        dbNames = data.values;\n      }\n    } catch (e) {\n      dbNames = [];\n    } finally {\n      db && db.close();\n    }\n  }\n\n  return dbNames;\n});","/**\n * @param {string} name\n * @returns {Promise.<IDBDatabase>}\n */\nexport const openDb = name => new Promise((resolve, reject) => {\n  const request = window.indexedDB.open(name);\n\n  request.onsuccess = () => resolve(request.result);\n\n  request.onerror = reject;\n});","export const getKeyFromObjectStore = (db, storeName, key) => new Promise((resolve, reject) => {\n  try {\n    const request = db.transaction(storeName).objectStore(storeName).get(key);\n\n    request.onsuccess = event => resolve(event.target.result);\n\n    request.onerror = reject;\n  } catch (e) {\n    reject(e);\n  }\n});","import { useEffect, useState } from 'react';\nimport { getCaptureAppUserDatabases } from './getCaptureAppUserDatabases.js';\nimport { getClearableDatabases } from './getClearableDatabases.js';\nexport const useClearableDatabaseKeys = () => {\n  const [refetchCounter, setRefetchCounter] = useState(0);\n\n  const refetch = () => setRefetchCounter(refetchCounter + 1);\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    // Contains all databases that are listed in the\n    // \"dhis2DatabaseNames\" file that acutally exist\n    staticDatabases: [],\n    // these won't be listed, but should be deleted\n    // if the static database \"dhis2ca\" is deleted by the user\n    userDatabases: []\n  });\n  useEffect(() => {\n    const operation = async () => {\n      setLoading(true);\n      const staticDatabases = await getClearableDatabases().catch(() => []);\n      const userDatabases = await getCaptureAppUserDatabases().catch(() => []);\n      const allDatabases = {\n        staticDatabases,\n        userDatabases\n      };\n      setData(allDatabases);\n      setLoading(false);\n    };\n\n    operation();\n  }, [refetchCounter]);\n  return {\n    loading,\n    data,\n    refetch\n  };\n};","import { dbExists } from './dbExists.js';\nimport { dhis2DatabaseNames } from './dhis2DatabaseNames.js';\n/**\n * @returns {Promise.<String[]>}\n */\n\nexport const getClearableDatabases = () => Promise.all(dhis2DatabaseNames.map(name => dbExists(name).then(exists => exists ? name : null))).then(keys => {\n  const filtered = keys.filter(key => key);\n  return filtered;\n});","export const clearStoragesByKey = (storage, keys) => {\n  // remove keys\n  keys.forEach(key => storage.removeItem(key)); // return removal check\n\n  return keys.reduce((success, key) => {\n    // fail if already failed\n    if (!success) {\n      return false;\n    }\n\n    return storage.getItem(key) === null;\n  }, true);\n};","export const reservedStorageKeys = [// exclude methods and props of Storage instances\n...Object.keys(Storage.prototype), // custom dhis2 keys that should not be cleared\n'dhis2.menu.ui.headerBar.title', 'dhis2.menu.ui.headerBar.link', 'dhis2.menu.ui.headerBar.userStyle', 'DHIS2_BASE_URL'];","import { useCallback, useEffect, useState } from 'react';\nimport { getClearableKeys } from './getClearableKeys.js';\nexport const useClearableStorageKeys = storage => {\n  const [existingKeys, setExistingKeys] = useState([]);\n  const onStorageChange = useCallback(() => {\n    const existing = getClearableKeys(storage);\n    setExistingKeys(existing);\n  }, [storage]);\n  useEffect(() => {\n    onStorageChange();\n  }, [onStorageChange]);\n  return {\n    keys: existingKeys,\n    refetch: onStorageChange\n  };\n};","import { reservedStorageKeys } from './reservedStorageKeys.js';\n/**\n * @param {Storage} strage\n * @returns {String[]}\n */\n\nexport const getClearableKeys = storage => Object.keys(storage).filter(key => !reservedStorageKeys.includes(key));","import { clearDatabasesByKey } from '../../indexedDb/index.js';\nimport { clearStoragesByKey } from '../../storage/index.js';\n\nconst clearLocalStorageByKeys = keys => clearStoragesByKey(window.localStorage, keys);\n\nconst clearSessionStorageByKeys = keys => clearStoragesByKey(window.sessionStorage, keys);\n\nexport const deleteValues = async values => {\n  var _values$indexedDB;\n\n  if (values.localStorageKeys) {\n    clearLocalStorageByKeys(values.localStorageKeys);\n  }\n\n  if (values.sessionStorageKeys) {\n    clearSessionStorageByKeys(values.sessionStorageKeys);\n  }\n\n  if ((_values$indexedDB = values.indexedDB) !== null && _values$indexedDB !== void 0 && _values$indexedDB.length) {\n    await clearDatabasesByKey(values.indexedDB);\n  }\n};","import { deleteDb } from './deleteDb.js';\nexport const clearDatabasesByKey = keys => {\n  const allDeleteProcesses = keys.map(key => deleteDb(key, true));\n  return Promise.all(allDeleteProcesses);\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { ClearForm } from '../clearForm/index.js';\nimport { useClearableDatabaseKeys } from '../indexedDb/index.js';\nimport { useClearableStorageKeys } from '../storage/index.js';\nimport styles from './Home.module.css';\nimport { deleteValues } from './Home/deleteValues.js';\nimport { formatDeleteValues } from './Home/formatDeleteValues.js';\nexport const Home = () => {\n  const {\n    keys: localStorageKeys,\n    refetch: refetchLocalStorageKeys\n  } = useClearableStorageKeys(window.localStorage);\n  const {\n    keys: sessionStorageKeys,\n    refetch: refetchSessionStorageKeys\n  } = useClearableStorageKeys(window.sessionStorage);\n  const {\n    loading,\n    error,\n    data: indexedDatabaseKeys,\n    refetch: refetchIndexedDatabaseKeys\n  } = useClearableDatabaseKeys();\n  const {\n    staticDatabases,\n    userDatabases\n  } = indexedDatabaseKeys;\n\n  const refetch = async () => {\n    refetchLocalStorageKeys();\n    refetchSessionStorageKeys();\n    await refetchIndexedDatabaseKeys();\n  };\n\n  const onSubmit = async values => {\n    const formattedValues = formatDeleteValues(values, userDatabases);\n    await deleteValues(formattedValues);\n    await refetch();\n  };\n\n  const showContent = !loading && !error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    \"data-test\": \"dhis2-cachecleaner-loading\"\n  }, i18n.t('Loading clearable data...')), error && i18n.t(`Something went wrong: ${error.message}`), showContent && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headline,\n    \"data-test\": \"dhis2-cachecleaner-homeheadline\"\n  }, i18n.t('DHIS 2 browser cache cleaner')), /*#__PURE__*/React.createElement(ClearForm // keep these so the previously selected values\n  // are kept for rejection in the confirmation step\n  , {\n    localStorageKeys: localStorageKeys,\n    sessionStorageKeys: sessionStorageKeys,\n    indexedDatabaseKeys: staticDatabases,\n    onSubmit: onSubmit\n  })));\n};","export const formatDeleteValues = (values, userDatabases) => {\n  const {\n    indexedDatabaseKeys,\n    localStorageKeys,\n    sessionStorageKeys\n  } = values; // user databases should only be cleared when the \"dhis2ca\" db is cleared\n\n  const shouldDeleteUserDatabases = (indexedDatabaseKeys === null || indexedDatabaseKeys === void 0 ? void 0 : indexedDatabaseKeys.includes('dhis2ca')) && (userDatabases === null || userDatabases === void 0 ? void 0 : userDatabases.length);\n  return {\n    localStorageKeys: localStorageKeys || [],\n    sessionStorageKeys: sessionStorageKeys || [],\n    indexedDB: [...(indexedDatabaseKeys || []), ...(shouldDeleteUserDatabases ? userDatabases : [])]\n  };\n};","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport './locales/index.js';\nimport { Home } from './views/index.js';\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\"\n  }, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Home, null));\n}"],"sourceRoot":""}